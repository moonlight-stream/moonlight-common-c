---
name: CI

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - master

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # TODO: arm build fails to link
          # - os: windows-11-arm
          #   cmake_args: -A ARM64 -DOPENSSL_ROOT_DIR="C:\OpenSSL" -DOPENSSL_INCLUDE_DIR="C:\OpenSSL\include\arm64"
          #   install_win_openssl: true
          - os: windows-latest
            cmake_args: -A Win32 -DOPENSSL_ROOT_DIR="C:\OpenSSL" -DOPENSSL_INCLUDE_DIR="C:\OpenSSL\include\x86"
            install_win_openssl: true
          - os: windows-latest
            cmake_args: -A x64
          - os: macos-latest
            build_target: macos
            cmake_args: -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl
          - os: ubuntu-latest
            cc: clang
            cxx: clang++
          - os: ubuntu-latest
            cc: gcc
            cxx: g++
          - os: ubuntu-latest
            cc: clang
            cxx: clang++
            cmake_args: -DUSE_MBEDTLS=ON
            prebuild_cmd: sudo apt install -y libmbedtls-dev
          - os: ubuntu-latest
            cc: gcc
            cxx: g++
            cmake_args: -DUSE_MBEDTLS=ON
            prebuild_cmd: sudo apt install -y libmbedtls-dev
    runs-on: ${{ matrix.os }}
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Windows OpenSSL
        if: matrix.install_win_openssl
        run: |
          # https://slproweb.com/products/Win32OpenSSL.html
          Write-Host "Downloading OpenSSL installer..."
          $url = "https://slproweb.com/download/WinUniversalOpenSSL-3_5_0.exe"
          $output = Join-Path -Path $env:TEMP -ChildPath "openssl.exe"
          Invoke-WebRequest -Uri $url -OutFile $output

          Write-Host "Download complete. Starting installation..."
          Start-Process `
            -FilePath $output `
            -ArgumentList "/SP", "/SILENT", "/ALLUSERS", "/DIR=C:\OpenSSL", "/LOG=openssl.log" `
            -Wait

          Write-Host "Installation complete."
          Write-Host "OpenSSL installation log:"
          Get-Content -Path "openssl.log"
          Write-Host "OpenSSL installation log end."

          Write-Host "Cleaning up..."
          Remove-Item -Path $output
          Write-Host "Cleanup complete."

      - name: Prebuild
        if: matrix.prebuild_cmd
        run: |
          ${{ matrix.prebuild_cmd }}

      - name: Build Debug
        run: |
          mkdir build_debug
          cmake ${{ matrix.cmake_args }} -DCMAKE_BUILD_TYPE=Debug -B build_debug -S .
          cmake --build build_debug --config Debug

      - name: Build Release
        run: |
          mkdir build_release
          cmake ${{ matrix.cmake_args }} -DCMAKE_BUILD_TYPE=Release -B build_release -S .
          cmake --build build_release --config Release
